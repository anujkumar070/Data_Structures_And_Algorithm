#include<iostream>
using namespace std;
#define n 30

class queue{
    
    int* arr;
    int front;
    int back;
    
    public:
    queue()
    {
        arr=new int[n];
        front =-1;
        back=-1;
    }
    
    void enqueue(int x)
    {
       if(back==n-1)
       {
           cout<<"Queue is full"<<endl;
           return ;
       }
        back++;
        arr[back]=x;
        if(front==-1)
        {
            front++;
        }
        
    }
    void dequeue()
    {
        if(front==-1 or front>back)
        {
            cout<<"No element to dequeue. Queue is Empty";
            return ;
        }
        front++;
        
    }
    
    int peek()
    {
        if(front==-1 || front>back)
        {
            cout<<"Queue is Empty";
            return -1;
        }
        return arr[front];
    }
    
    bool empty()
    {
        if(front==-1 or front>back)
        {
            return true;
        }
        return true;
    }
};

int main()
{
    queue q;
    q.enqueue(1);
    q.enqueue(2);
    q.enqueue(3);
    q.enqueue(4);
    q.enqueue(5);
    q.enqueue(6);
    std::cout<<q.peek()<<endl;
    q.dequeue();
    cout<<q.peek()<<endl;
    q.dequeue();
    cout<<q.peek()<<endl;
    q.dequeue();
    cout<<q.peek()<<endl;
    q.dequeue();
    cout<<q.peek()<<endl;
    q.dequeue();
    cout<<q.peek()<<endl;
    q.dequeue();
    cout<<q.peek()<<endl;
    
    return 0;
    
}
