#include<iostream>
using namespace std;

class Node {
  public:  
  int data;
  Node *left, *right;
  
  Node(int val)
  {
      data=val;
      left=NULL;
      right=NULL;
  }
  
};

bool isBST(Node* root, Node* min=NULL, Node* max=NULL)
{
    if(root==NULL)
    {
        return true;
    }
    
    if(min != NULL && root->data <= min->data)
    {
        return false;
    }
    if(max != NULL && root->data >= max->data)
    {
        return false;
    }
    
    bool left=isBST(root->left, min , root);
    bool right=isBST(root->right, root, max);
    
    return left and right;
    
}


void preorder(Node* root)
{
    if(root==NULL){
        return;
    }
    preorder(root->left);
    cout<<root->data<<" ";
    preorder(root->right);
}

int main()
{
    Node* root=new Node(3);
    root->left=new Node(2);
    root->right=new Node(4);
    preorder(root);
    cout<<endl;
   
   if(isBST(root, NULL, NULL)){
       cout<<"Valid BST";
   }
   else{
       cout<<"Invalid BST";
   }
    
    
    
    
    return 0;
}
